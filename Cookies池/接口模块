import json
from flask import Flask, g
from Cookies池_存储模块 import RedisClient
app = Flask(__name__)
GENERATOR_MAP = {'weibo': 'WeiboCookiesGenerator'}


# 以下三个函数，均认为g为类的实例对象
def get_conn():
    for website in GENERATOR_MAP:
    # 这里website是对字典的全部键名组成的列表，的遍历
        if not hasattr(g, website):
            setattr(g, website + '_cookies', eval('RedisClient' + '("cookies", "' + website + '")'))
    return g
    # 这里相当于“暂时”生成并返回了一个新类g，新类g除了原本的属性和方法外
    # 还具有了新的属性名：'weibo_cookies'和属性值：RedisClient('cookies','weibo')
    # 其中这个属性值，是RedisClient的一个实例对象（即获取模块&检测模块中的cookies_db）

@app.route('/')
def index():
    return '<h2>Welcome to Cookie Pool System</h2>'

@app.route('/<website>/random')
def random(website):
    """
    获取随机的 Cookie, 访问地址如 /weibo/random
    :return: 随机 Cookie
    """
    g = get_conn()
    cookies = getattr(g, website + '_cookies').random()
    return cookies
    # 这里的getattr(g, website + '_cookies')实际上相当于g.weibo_cookies
    # 即RedisClient的实例对象cookies_db，对这个实例对象调用方法random()即数据库内的一个随机cookies





